<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>setTimeout()について</title>
      <link href="/2020/07/11/setTimeout-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/"/>
      <url>/2020/07/11/setTimeout-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</url>
      
        <content type="html"><![CDATA[<p>setTimeoutはある処理を一定時間後に実行するように命令することができるメソッドです。<br>setTimeout()によるタイマー処理は続けて複数のタイマーを起動させることができるので合わせてご紹介しておきます。<br>基本的な方法としては、setTimeout()の引数に指定した関数の中でさらに続けてsetTimeout()を実行するというものです。<br>次の例を見てください！<br>1    setTimeout(function() {<br>2      console.log(‘1つ目のタイマー’);<br>3<br>4        setTimeout(function() {<br>5            console.log(‘2つ目のタイマー’);<br>6        }, 1000);<br>7<br>8    }, 2000);<br>実行結果<br>1    1つ目のタイマー<br>2    2つ目のタイマー<br>この例では、1つ目のsetTimeout()を実行した中でさらにもう1つのsetTimeout()を実行していますね。<br><img src="/.com//js.jpg" alt="javascript"></p>]]></content>
      
      
      <categories>
          
          <category> 実用技術 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>getPicklist項目内容取得</title>
      <link href="/2020/07/11/NewBlog/"/>
      <url>/2020/07/11/NewBlog/</url>
      
        <content type="html"><![CDATA[<p>public List&lt;Schema.PicklistEntry&gt; getPicklist(String sObjName, String fieldName){<br>    List&lt;Schema.PicklistEntry&gt; pickList;<br>    Schema.SObjectType sObjType = (Schema.SObjectType) Schema.getGlobalDescribe().get(sObjName);<br>    if(sObjType != null){<br>        Map&lt;String, Schema.SObjectField&gt; fieldmap = sObjType.getDescribe().fields.getMap();<br>        Schema.SObjectField f = (Schema.SObjectField) fieldmap.get(fieldName);<br>        if(f != null){<br>            Schema.DescribeFieldResult r = f.getDescribe();<br>            pickList = r.getPicklistValues();<br>            System.debug(‘値’ + pickList);<br>        }<br>    }<br>    return pickList;<br>}<br>//取引先の種別という選択リストの取得<br>List&lt;Schema.PicklistEntry&gt; picklist = getPicklist(‘LiveChatTranscriptEvent’, ‘Type’);</p><p>//ログで中身を確認する<br>for(Schema.PicklistEntry pick : picklist){<br>    System.debug(‘—————–’);<br>    System.debug(‘Label :’ + pick.getLabel());<br>    System.debug(‘Value :’ + pick.getValue());<br>    System.debug(‘Active:’ + pick.isActive());<br>    System.debug(‘isDefaultValue:’ + pick.isDefaultValue());<br>}</p>]]></content>
      
      
      <categories>
          
          <category> 实用技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> apex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/07/09/hello-world/"/>
      <url>/2020/07/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
